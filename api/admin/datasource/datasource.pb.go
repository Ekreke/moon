// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.4
// source: admin/datasource/datasource.proto

package datasource

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	api "github.com/aide-cloud/moon/api"
	admin "github.com/aide-cloud/moon/api/admin"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDatasourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据源名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 数据源类型
	Type api.DatasourceType `protobuf:"varint,2,opt,name=type,proto3,enum=api.DatasourceType" json:"type,omitempty"`
	// 数据源地址
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// 状态
	Status api.Status `protobuf:"varint,4,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
	// 描述
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	// 数据源配置
	Config map[string]string `protobuf:"bytes,6,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 所属团队， 不填写默认全局
	TeamId uint32 `protobuf:"varint,7,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
}

func (x *CreateDatasourceRequest) Reset() {
	*x = CreateDatasourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatasourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasourceRequest) ProtoMessage() {}

func (x *CreateDatasourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasourceRequest.ProtoReflect.Descriptor instead.
func (*CreateDatasourceRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDatasourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDatasourceRequest) GetType() api.DatasourceType {
	if x != nil {
		return x.Type
	}
	return api.DatasourceType(0)
}

func (x *CreateDatasourceRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CreateDatasourceRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

func (x *CreateDatasourceRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateDatasourceRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateDatasourceRequest) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type CreateDatasourceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDatasourceReply) Reset() {
	*x = CreateDatasourceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatasourceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatasourceReply) ProtoMessage() {}

func (x *CreateDatasourceReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatasourceReply.ProtoReflect.Descriptor instead.
func (*CreateDatasourceReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{1}
}

type UpdateDatasourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *CreateDatasourceRequest `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateDatasourceRequest) Reset() {
	*x = UpdateDatasourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasourceRequest) ProtoMessage() {}

func (x *UpdateDatasourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateDatasourceRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDatasourceRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDatasourceRequest) GetData() *CreateDatasourceRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateDatasourceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDatasourceReply) Reset() {
	*x = UpdateDatasourceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasourceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasourceReply) ProtoMessage() {}

func (x *UpdateDatasourceReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasourceReply.ProtoReflect.Descriptor instead.
func (*UpdateDatasourceReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{3}
}

type DeleteDatasourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDatasourceRequest) Reset() {
	*x = DeleteDatasourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDatasourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatasourceRequest) ProtoMessage() {}

func (x *DeleteDatasourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatasourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDatasourceRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDatasourceRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteDatasourceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDatasourceReply) Reset() {
	*x = DeleteDatasourceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDatasourceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatasourceReply) ProtoMessage() {}

func (x *DeleteDatasourceReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatasourceReply.ProtoReflect.Descriptor instead.
func (*DeleteDatasourceReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{5}
}

type GetDatasourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDatasourceRequest) Reset() {
	*x = GetDatasourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasourceRequest) ProtoMessage() {}

func (x *GetDatasourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasourceRequest.ProtoReflect.Descriptor instead.
func (*GetDatasourceRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{6}
}

func (x *GetDatasourceRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDatasourceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDatasourceReply) Reset() {
	*x = GetDatasourceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasourceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasourceReply) ProtoMessage() {}

func (x *GetDatasourceReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasourceReply.ProtoReflect.Descriptor instead.
func (*GetDatasourceReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{7}
}

type ListDatasourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Pagination *api.PaginationReq `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 模糊查询
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 状态
	Status api.Status `protobuf:"varint,3,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
	// 数据源类型
	Type api.DatasourceType `protobuf:"varint,4,opt,name=type,proto3,enum=api.DatasourceType" json:"type,omitempty"`
	// 所属团队
	TeamId uint32 `protobuf:"varint,5,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
}

func (x *ListDatasourceRequest) Reset() {
	*x = ListDatasourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasourceRequest) ProtoMessage() {}

func (x *ListDatasourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasourceRequest.ProtoReflect.Descriptor instead.
func (*ListDatasourceRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{8}
}

func (x *ListDatasourceRequest) GetPagination() *api.PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListDatasourceRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListDatasourceRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

func (x *ListDatasourceRequest) GetType() api.DatasourceType {
	if x != nil {
		return x.Type
	}
	return api.DatasourceType(0)
}

func (x *ListDatasourceRequest) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type ListDatasourceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *api.PaginationReply `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Data       []*admin.Datasource  `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListDatasourceReply) Reset() {
	*x = ListDatasourceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasourceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasourceReply) ProtoMessage() {}

func (x *ListDatasourceReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasourceReply.ProtoReflect.Descriptor instead.
func (*ListDatasourceReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{9}
}

func (x *ListDatasourceReply) GetPagination() *api.PaginationReply {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListDatasourceReply) GetData() []*admin.Datasource {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateDatasourceStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status api.Status `protobuf:"varint,2,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
}

func (x *UpdateDatasourceStatusRequest) Reset() {
	*x = UpdateDatasourceStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasourceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasourceStatusRequest) ProtoMessage() {}

func (x *UpdateDatasourceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasourceStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateDatasourceStatusRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateDatasourceStatusRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDatasourceStatusRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

type UpdateDatasourceStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDatasourceStatusReply) Reset() {
	*x = UpdateDatasourceStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDatasourceStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDatasourceStatusReply) ProtoMessage() {}

func (x *UpdateDatasourceStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDatasourceStatusReply.ProtoReflect.Descriptor instead.
func (*UpdateDatasourceStatusReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{11}
}

type GetDatasourceSelectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId  uint32               `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Type    []api.DatasourceType `protobuf:"varint,2,rep,packed,name=type,proto3,enum=api.DatasourceType" json:"type,omitempty"`
	Status  []api.Status         `protobuf:"varint,3,rep,packed,name=status,proto3,enum=api.Status" json:"status,omitempty"`
	Keyword string               `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Limit   uint32               `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetDatasourceSelectRequest) Reset() {
	*x = GetDatasourceSelectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasourceSelectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasourceSelectRequest) ProtoMessage() {}

func (x *GetDatasourceSelectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasourceSelectRequest.ProtoReflect.Descriptor instead.
func (*GetDatasourceSelectRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{12}
}

func (x *GetDatasourceSelectRequest) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GetDatasourceSelectRequest) GetType() []api.DatasourceType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *GetDatasourceSelectRequest) GetStatus() []api.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetDatasourceSelectRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetDatasourceSelectRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetDatasourceSelectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*admin.Select `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDatasourceSelectReply) Reset() {
	*x = GetDatasourceSelectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_datasource_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasourceSelectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasourceSelectReply) ProtoMessage() {}

func (x *GetDatasourceSelectReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_datasource_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasourceSelectReply.ProtoReflect.Descriptor instead.
func (*GetDatasourceSelectReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_datasource_proto_rawDescGZIP(), []int{13}
}

func (x *GetDatasourceSelectReply) GetData() []*admin.Select {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_admin_datasource_datasource_proto protoreflect.FileDescriptor

var file_admin_datasource_datasource_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xad, 0x05, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x77, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x63, 0xba, 0x48, 0x60,
	0xba, 0x01, 0x5a, 0x12, 0x31, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0xba, 0x90, 0xe5, 0x90,
	0x8d, 0xe7, 0xa7, 0xb0, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x20, 0x31, 0x20,
	0xe5, 0x88, 0xb0, 0x20, 0x35, 0x30, 0x20, 0xe4, 0xb8, 0xaa, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6,
	0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x1a, 0x25, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a,
	0x65, 0x28, 0x29, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x74, 0x68, 0x69, 0x73,
	0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x35, 0x30, 0xc8, 0x01, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0xbb, 0x01, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x9e, 0x01, 0xba, 0x48, 0x9a,
	0x01, 0xba, 0x01, 0x5c, 0x12, 0x32, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0xba, 0x90, 0xe5,
	0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x20, 0x31,
	0x20, 0xe5, 0x88, 0xb0, 0x20, 0x32, 0x35, 0x35, 0x20, 0xe4, 0xb8, 0xaa, 0xe5, 0xad, 0x97, 0xe7,
	0xac, 0xa6, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x1a, 0x26, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73,
	0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x32, 0x35, 0x35,
	0xba, 0x01, 0x35, 0x12, 0x25, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0xba, 0x90, 0xe5, 0x9c,
	0xb0, 0xe5, 0x9d, 0x80, 0xe5, 0xbf, 0x85, 0xe9, 0xa1, 0xbb, 0xe6, 0x98, 0xaf, 0xe6, 0x9c, 0x89,
	0xe6, 0x95, 0x88, 0xe7, 0x9a, 0x84, 0x20, 0x55, 0x52, 0x49, 0x1a, 0x0c, 0x74, 0x68, 0x69, 0x73,
	0x2e, 0x69, 0x73, 0x55, 0x72, 0x69, 0x28, 0x29, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x56, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x3e, 0xba, 0x48, 0x3b, 0xba, 0x01, 0x38, 0x12, 0x22, 0xe6, 0x8f, 0x8f, 0xe8,
	0xbf, 0xb0, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x32, 0x35, 0x35, 0x20, 0xe4,
	0xb8, 0xaa, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xbb, 0xa5, 0xe5, 0x86, 0x85, 0x1a, 0x12,
	0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x32,
	0x35, 0x35, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x51, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x7c, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x31, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2e, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x99, 0x02, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x43, 0xba, 0x48, 0x40, 0xba,
	0x01, 0x3d, 0x12, 0x28, 0xe6, 0xa8, 0xa1, 0xe7, 0xb3, 0x8a, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2,
	0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x20, 0x32, 0x30, 0x20, 0xe4, 0xb8, 0xaa,
	0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xbb, 0xa5, 0xe5, 0x86, 0x85, 0x1a, 0x11, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x32, 0x30, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22,
	0x76, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1d, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xdd, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x3e, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x28, 0xba, 0x48, 0x25,
	0xba, 0x01, 0x22, 0x12, 0x11, 0xe5, 0xbf, 0x85, 0xe9, 0xa1, 0xbb, 0xe5, 0xb0, 0x8f, 0xe4, 0xba,
	0x8e, 0x20, 0x31, 0x30, 0x30, 0x30, 0x1a, 0x0d, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3c, 0x3d, 0x3d,
	0x20, 0x31, 0x30, 0x30, 0x30, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x41, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32,
	0x8d, 0x08, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x89,
	0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x1a, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8b, 0x01, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x88,
	0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xa7, 0x01, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x1a, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x99, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x30, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42,
	0x54, 0x0a, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x64, 0x65, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x6d, 0x6f, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_datasource_datasource_proto_rawDescOnce sync.Once
	file_admin_datasource_datasource_proto_rawDescData = file_admin_datasource_datasource_proto_rawDesc
)

func file_admin_datasource_datasource_proto_rawDescGZIP() []byte {
	file_admin_datasource_datasource_proto_rawDescOnce.Do(func() {
		file_admin_datasource_datasource_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_datasource_datasource_proto_rawDescData)
	})
	return file_admin_datasource_datasource_proto_rawDescData
}

var file_admin_datasource_datasource_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_admin_datasource_datasource_proto_goTypes = []interface{}{
	(*CreateDatasourceRequest)(nil),       // 0: api.admin.datasource.CreateDatasourceRequest
	(*CreateDatasourceReply)(nil),         // 1: api.admin.datasource.CreateDatasourceReply
	(*UpdateDatasourceRequest)(nil),       // 2: api.admin.datasource.UpdateDatasourceRequest
	(*UpdateDatasourceReply)(nil),         // 3: api.admin.datasource.UpdateDatasourceReply
	(*DeleteDatasourceRequest)(nil),       // 4: api.admin.datasource.DeleteDatasourceRequest
	(*DeleteDatasourceReply)(nil),         // 5: api.admin.datasource.DeleteDatasourceReply
	(*GetDatasourceRequest)(nil),          // 6: api.admin.datasource.GetDatasourceRequest
	(*GetDatasourceReply)(nil),            // 7: api.admin.datasource.GetDatasourceReply
	(*ListDatasourceRequest)(nil),         // 8: api.admin.datasource.ListDatasourceRequest
	(*ListDatasourceReply)(nil),           // 9: api.admin.datasource.ListDatasourceReply
	(*UpdateDatasourceStatusRequest)(nil), // 10: api.admin.datasource.UpdateDatasourceStatusRequest
	(*UpdateDatasourceStatusReply)(nil),   // 11: api.admin.datasource.UpdateDatasourceStatusReply
	(*GetDatasourceSelectRequest)(nil),    // 12: api.admin.datasource.GetDatasourceSelectRequest
	(*GetDatasourceSelectReply)(nil),      // 13: api.admin.datasource.GetDatasourceSelectReply
	nil,                                   // 14: api.admin.datasource.CreateDatasourceRequest.ConfigEntry
	(api.DatasourceType)(0),               // 15: api.DatasourceType
	(api.Status)(0),                       // 16: api.Status
	(*api.PaginationReq)(nil),             // 17: api.PaginationReq
	(*api.PaginationReply)(nil),           // 18: api.PaginationReply
	(*admin.Datasource)(nil),              // 19: api.admin.Datasource
	(*admin.Select)(nil),                  // 20: api.admin.Select
}
var file_admin_datasource_datasource_proto_depIdxs = []int32{
	15, // 0: api.admin.datasource.CreateDatasourceRequest.type:type_name -> api.DatasourceType
	16, // 1: api.admin.datasource.CreateDatasourceRequest.status:type_name -> api.Status
	14, // 2: api.admin.datasource.CreateDatasourceRequest.config:type_name -> api.admin.datasource.CreateDatasourceRequest.ConfigEntry
	0,  // 3: api.admin.datasource.UpdateDatasourceRequest.data:type_name -> api.admin.datasource.CreateDatasourceRequest
	17, // 4: api.admin.datasource.ListDatasourceRequest.pagination:type_name -> api.PaginationReq
	16, // 5: api.admin.datasource.ListDatasourceRequest.status:type_name -> api.Status
	15, // 6: api.admin.datasource.ListDatasourceRequest.type:type_name -> api.DatasourceType
	18, // 7: api.admin.datasource.ListDatasourceReply.pagination:type_name -> api.PaginationReply
	19, // 8: api.admin.datasource.ListDatasourceReply.data:type_name -> api.admin.Datasource
	16, // 9: api.admin.datasource.UpdateDatasourceStatusRequest.status:type_name -> api.Status
	15, // 10: api.admin.datasource.GetDatasourceSelectRequest.type:type_name -> api.DatasourceType
	16, // 11: api.admin.datasource.GetDatasourceSelectRequest.status:type_name -> api.Status
	20, // 12: api.admin.datasource.GetDatasourceSelectReply.data:type_name -> api.admin.Select
	0,  // 13: api.admin.datasource.Datasource.CreateDatasource:input_type -> api.admin.datasource.CreateDatasourceRequest
	2,  // 14: api.admin.datasource.Datasource.UpdateDatasource:input_type -> api.admin.datasource.UpdateDatasourceRequest
	4,  // 15: api.admin.datasource.Datasource.DeleteDatasource:input_type -> api.admin.datasource.DeleteDatasourceRequest
	6,  // 16: api.admin.datasource.Datasource.GetDatasource:input_type -> api.admin.datasource.GetDatasourceRequest
	8,  // 17: api.admin.datasource.Datasource.ListDatasource:input_type -> api.admin.datasource.ListDatasourceRequest
	10, // 18: api.admin.datasource.Datasource.UpdateDatasourceStatus:input_type -> api.admin.datasource.UpdateDatasourceStatusRequest
	12, // 19: api.admin.datasource.Datasource.GetDatasourceSelect:input_type -> api.admin.datasource.GetDatasourceSelectRequest
	1,  // 20: api.admin.datasource.Datasource.CreateDatasource:output_type -> api.admin.datasource.CreateDatasourceReply
	3,  // 21: api.admin.datasource.Datasource.UpdateDatasource:output_type -> api.admin.datasource.UpdateDatasourceReply
	5,  // 22: api.admin.datasource.Datasource.DeleteDatasource:output_type -> api.admin.datasource.DeleteDatasourceReply
	7,  // 23: api.admin.datasource.Datasource.GetDatasource:output_type -> api.admin.datasource.GetDatasourceReply
	9,  // 24: api.admin.datasource.Datasource.ListDatasource:output_type -> api.admin.datasource.ListDatasourceReply
	11, // 25: api.admin.datasource.Datasource.UpdateDatasourceStatus:output_type -> api.admin.datasource.UpdateDatasourceStatusReply
	13, // 26: api.admin.datasource.Datasource.GetDatasourceSelect:output_type -> api.admin.datasource.GetDatasourceSelectReply
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_admin_datasource_datasource_proto_init() }
func file_admin_datasource_datasource_proto_init() {
	if File_admin_datasource_datasource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_datasource_datasource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatasourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatasourceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDatasourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDatasourceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDatasourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDatasourceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasourceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasourceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDatasourceStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDatasourceStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasourceSelectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_datasource_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatasourceSelectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_datasource_datasource_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_datasource_datasource_proto_goTypes,
		DependencyIndexes: file_admin_datasource_datasource_proto_depIdxs,
		MessageInfos:      file_admin_datasource_datasource_proto_msgTypes,
	}.Build()
	File_admin_datasource_datasource_proto = out.File
	file_admin_datasource_datasource_proto_rawDesc = nil
	file_admin_datasource_datasource_proto_goTypes = nil
	file_admin_datasource_datasource_proto_depIdxs = nil
}
