// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: admin/datasource/metric.proto

package datasource

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	api "github.com/aide-family/moon/api"
	admin "github.com/aide-family/moon/api/admin"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 指标ID
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 指标单位
	Unit string `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	// 指标描述
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdateMetricRequest) Reset() {
	*x = UpdateMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_metric_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMetricRequest) ProtoMessage() {}

func (x *UpdateMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_metric_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMetricRequest.ProtoReflect.Descriptor instead.
func (*UpdateMetricRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_metric_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateMetricRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMetricRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *UpdateMetricRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateMetricReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMetricReply) Reset() {
	*x = UpdateMetricReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_metric_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMetricReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMetricReply) ProtoMessage() {}

func (x *UpdateMetricReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_metric_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMetricReply.ProtoReflect.Descriptor instead.
func (*UpdateMetricReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_metric_proto_rawDescGZIP(), []int{1}
}

type DeleteMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 指标ID
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMetricRequest) Reset() {
	*x = DeleteMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_metric_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMetricRequest) ProtoMessage() {}

func (x *DeleteMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_metric_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMetricRequest.ProtoReflect.Descriptor instead.
func (*DeleteMetricRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_metric_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteMetricRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMetricReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMetricReply) Reset() {
	*x = DeleteMetricReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_metric_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMetricReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMetricReply) ProtoMessage() {}

func (x *DeleteMetricReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_metric_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMetricReply.ProtoReflect.Descriptor instead.
func (*DeleteMetricReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_metric_proto_rawDescGZIP(), []int{3}
}

type GetMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 指标ID
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 是否加载关联数据
	WithRelation bool `protobuf:"varint,2,opt,name=with_relation,json=withRelation,proto3" json:"with_relation,omitempty"`
}

func (x *GetMetricRequest) Reset() {
	*x = GetMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_metric_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricRequest) ProtoMessage() {}

func (x *GetMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_metric_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricRequest.ProtoReflect.Descriptor instead.
func (*GetMetricRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_metric_proto_rawDescGZIP(), []int{4}
}

func (x *GetMetricRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMetricRequest) GetWithRelation() bool {
	if x != nil {
		return x.WithRelation
	}
	return false
}

type GetMetricReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 详情
	Data *admin.MetricDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// label数量
	LabelCount uint32 `protobuf:"varint,2,opt,name=label_count,json=labelCount,proto3" json:"label_count,omitempty"`
}

func (x *GetMetricReply) Reset() {
	*x = GetMetricReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_metric_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricReply) ProtoMessage() {}

func (x *GetMetricReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_metric_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricReply.ProtoReflect.Descriptor instead.
func (*GetMetricReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_metric_proto_rawDescGZIP(), []int{5}
}

func (x *GetMetricReply) GetData() *admin.MetricDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetMetricReply) GetLabelCount() uint32 {
	if x != nil {
		return x.LabelCount
	}
	return 0
}

type ListMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Pagination *api.PaginationReq `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 模糊查询， 不超过20字符搜索
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 指标类型
	MetricType api.MetricType `protobuf:"varint,3,opt,name=metricType,proto3,enum=api.MetricType" json:"metricType,omitempty"`
	// 数据源ID
	DatasourceId uint32 `protobuf:"varint,4,opt,name=datasource_id,json=datasourceId,proto3" json:"datasource_id,omitempty"`
}

func (x *ListMetricRequest) Reset() {
	*x = ListMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_metric_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricRequest) ProtoMessage() {}

func (x *ListMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_metric_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricRequest.ProtoReflect.Descriptor instead.
func (*ListMetricRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_metric_proto_rawDescGZIP(), []int{6}
}

func (x *ListMetricRequest) GetPagination() *api.PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListMetricRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListMetricRequest) GetMetricType() api.MetricType {
	if x != nil {
		return x.MetricType
	}
	return api.MetricType(0)
}

func (x *ListMetricRequest) GetDatasourceId() uint32 {
	if x != nil {
		return x.DatasourceId
	}
	return 0
}

type ListMetricReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Pagination *api.PaginationReply `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 数据
	List []*admin.MetricDetail `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListMetricReply) Reset() {
	*x = ListMetricReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_metric_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricReply) ProtoMessage() {}

func (x *ListMetricReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_metric_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricReply.ProtoReflect.Descriptor instead.
func (*ListMetricReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_metric_proto_rawDescGZIP(), []int{7}
}

func (x *ListMetricReply) GetPagination() *api.PaginationReply {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListMetricReply) GetList() []*admin.MetricDetail {
	if x != nil {
		return x.List
	}
	return nil
}

type SelectMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模糊查询， 不超过20字符搜索
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 指标类型
	MetricType api.MetricType `protobuf:"varint,2,opt,name=metricType,proto3,enum=api.MetricType" json:"metricType,omitempty"`
	// 数据源ID
	DatasourceId uint32 `protobuf:"varint,3,opt,name=datasource_id,json=datasourceId,proto3" json:"datasource_id,omitempty"`
	// metric ids (用于包含默认参数的场景， 例如：编辑时候， 映射某个指标)
	Ids []uint32 `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	// 分页参数
	Pagination *api.PaginationReq `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SelectMetricRequest) Reset() {
	*x = SelectMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_metric_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectMetricRequest) ProtoMessage() {}

func (x *SelectMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_metric_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectMetricRequest.ProtoReflect.Descriptor instead.
func (*SelectMetricRequest) Descriptor() ([]byte, []int) {
	return file_admin_datasource_metric_proto_rawDescGZIP(), []int{8}
}

func (x *SelectMetricRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SelectMetricRequest) GetMetricType() api.MetricType {
	if x != nil {
		return x.MetricType
	}
	return api.MetricType(0)
}

func (x *SelectMetricRequest) GetDatasourceId() uint32 {
	if x != nil {
		return x.DatasourceId
	}
	return 0
}

func (x *SelectMetricRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SelectMetricRequest) GetPagination() *api.PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SelectMetricReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据
	List []*admin.Select `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 分页参数
	Pagination *api.PaginationReply `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SelectMetricReply) Reset() {
	*x = SelectMetricReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_datasource_metric_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectMetricReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectMetricReply) ProtoMessage() {}

func (x *SelectMetricReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_datasource_metric_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectMetricReply.ProtoReflect.Descriptor instead.
func (*SelectMetricReply) Descriptor() ([]byte, []int) {
	return file_admin_datasource_metric_proto_rawDescGZIP(), []int{9}
}

func (x *SelectMetricReply) GetList() []*admin.Select {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SelectMetricReply) GetPagination() *api.PaginationReply {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_admin_datasource_metric_proto protoreflect.FileDescriptor

var file_admin_datasource_metric_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x14, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x01,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x12, 0xa1, 0x01, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x88, 0x01, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0xba, 0x48, 0x7f, 0xba, 0x01,
	0x7c, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0xe6, 0x8c,
	0x87, 0xe6, 0xa0, 0x87, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd,
	0xe4, 0xb8, 0xba, 0xe7, 0xa9, 0xba, 0x2c, 0x20, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe6, 0x95,
	0xb0, 0xe9, 0x87, 0x8f, 0xe6, 0x8e, 0xa7, 0xe5, 0x88, 0xb6, 0xe5, 0x9c, 0xa8, 0x32, 0x30, 0x30,
	0xe4, 0xbb, 0xa5, 0xe5, 0x86, 0x85, 0x1a, 0x25, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a,
	0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x32, 0x30, 0x30, 0x20, 0x26, 0x26, 0x20, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4f,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x5e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xa0, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x6f, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x55, 0xba, 0x48, 0x52, 0xba, 0x01, 0x4f, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0xe5, 0x85, 0xb3, 0xe9, 0x94, 0xae, 0xe5, 0xad, 0x97, 0xe4,
	0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe8, 0xb6, 0x85, 0xe8, 0xbf, 0x87, 0x32, 0x30, 0xe4, 0xb8, 0xaa,
	0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0x1a, 0x11, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a,
	0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x32, 0x30, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x74, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb6, 0x02, 0x0a, 0x13, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x71, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x57, 0xba, 0x48, 0x54, 0xba, 0x01, 0x51, 0x0a, 0x1a, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0xe5, 0x85, 0xb3, 0xe9, 0x94, 0xae, 0xe5, 0xad, 0x97,
	0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe8, 0xb6, 0x85, 0xe8, 0xbf, 0x87, 0x32, 0x30, 0xe4, 0xb8,
	0xaa, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0x1a, 0x11, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69,
	0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x32, 0x30, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x70, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0xb0, 0x05, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x89,
	0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x1a, 0x1a, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x83, 0x01, 0x0a, 0x0a, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x8b, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x86, 0x01,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x55, 0x0a, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x01,
	0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x64,
	0x65, 0x2d, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x2f, 0x6d, 0x6f, 0x6f, 0x6e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_datasource_metric_proto_rawDescOnce sync.Once
	file_admin_datasource_metric_proto_rawDescData = file_admin_datasource_metric_proto_rawDesc
)

func file_admin_datasource_metric_proto_rawDescGZIP() []byte {
	file_admin_datasource_metric_proto_rawDescOnce.Do(func() {
		file_admin_datasource_metric_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_datasource_metric_proto_rawDescData)
	})
	return file_admin_datasource_metric_proto_rawDescData
}

var file_admin_datasource_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_admin_datasource_metric_proto_goTypes = []interface{}{
	(*UpdateMetricRequest)(nil), // 0: api.admin.datasource.UpdateMetricRequest
	(*UpdateMetricReply)(nil),   // 1: api.admin.datasource.UpdateMetricReply
	(*DeleteMetricRequest)(nil), // 2: api.admin.datasource.DeleteMetricRequest
	(*DeleteMetricReply)(nil),   // 3: api.admin.datasource.DeleteMetricReply
	(*GetMetricRequest)(nil),    // 4: api.admin.datasource.GetMetricRequest
	(*GetMetricReply)(nil),      // 5: api.admin.datasource.GetMetricReply
	(*ListMetricRequest)(nil),   // 6: api.admin.datasource.ListMetricRequest
	(*ListMetricReply)(nil),     // 7: api.admin.datasource.ListMetricReply
	(*SelectMetricRequest)(nil), // 8: api.admin.datasource.SelectMetricRequest
	(*SelectMetricReply)(nil),   // 9: api.admin.datasource.SelectMetricReply
	(*admin.MetricDetail)(nil),  // 10: api.admin.MetricDetail
	(*api.PaginationReq)(nil),   // 11: api.PaginationReq
	(api.MetricType)(0),         // 12: api.MetricType
	(*api.PaginationReply)(nil), // 13: api.PaginationReply
	(*admin.Select)(nil),        // 14: api.admin.Select
}
var file_admin_datasource_metric_proto_depIdxs = []int32{
	10, // 0: api.admin.datasource.GetMetricReply.data:type_name -> api.admin.MetricDetail
	11, // 1: api.admin.datasource.ListMetricRequest.pagination:type_name -> api.PaginationReq
	12, // 2: api.admin.datasource.ListMetricRequest.metricType:type_name -> api.MetricType
	13, // 3: api.admin.datasource.ListMetricReply.pagination:type_name -> api.PaginationReply
	10, // 4: api.admin.datasource.ListMetricReply.list:type_name -> api.admin.MetricDetail
	12, // 5: api.admin.datasource.SelectMetricRequest.metricType:type_name -> api.MetricType
	11, // 6: api.admin.datasource.SelectMetricRequest.pagination:type_name -> api.PaginationReq
	14, // 7: api.admin.datasource.SelectMetricReply.list:type_name -> api.admin.Select
	13, // 8: api.admin.datasource.SelectMetricReply.pagination:type_name -> api.PaginationReply
	0,  // 9: api.admin.datasource.Metric.UpdateMetric:input_type -> api.admin.datasource.UpdateMetricRequest
	4,  // 10: api.admin.datasource.Metric.GetMetric:input_type -> api.admin.datasource.GetMetricRequest
	6,  // 11: api.admin.datasource.Metric.ListMetric:input_type -> api.admin.datasource.ListMetricRequest
	8,  // 12: api.admin.datasource.Metric.SelectMetric:input_type -> api.admin.datasource.SelectMetricRequest
	2,  // 13: api.admin.datasource.Metric.DeleteMetric:input_type -> api.admin.datasource.DeleteMetricRequest
	1,  // 14: api.admin.datasource.Metric.UpdateMetric:output_type -> api.admin.datasource.UpdateMetricReply
	5,  // 15: api.admin.datasource.Metric.GetMetric:output_type -> api.admin.datasource.GetMetricReply
	7,  // 16: api.admin.datasource.Metric.ListMetric:output_type -> api.admin.datasource.ListMetricReply
	9,  // 17: api.admin.datasource.Metric.SelectMetric:output_type -> api.admin.datasource.SelectMetricReply
	3,  // 18: api.admin.datasource.Metric.DeleteMetric:output_type -> api.admin.datasource.DeleteMetricReply
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_admin_datasource_metric_proto_init() }
func file_admin_datasource_metric_proto_init() {
	if File_admin_datasource_metric_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_datasource_metric_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_metric_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMetricReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_metric_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_metric_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMetricReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_metric_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_metric_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_metric_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_metric_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_metric_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_datasource_metric_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectMetricReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_datasource_metric_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_datasource_metric_proto_goTypes,
		DependencyIndexes: file_admin_datasource_metric_proto_depIdxs,
		MessageInfos:      file_admin_datasource_metric_proto_msgTypes,
	}.Build()
	File_admin_datasource_metric_proto = out.File
	file_admin_datasource_metric_proto_rawDesc = nil
	file_admin_datasource_metric_proto_goTypes = nil
	file_admin_datasource_metric_proto_depIdxs = nil
}
