// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: admin/team/team.proto

package team

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	api "github.com/aide-family/moon/api"
	admin "github.com/aide-family/moon/api/admin"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 团队名称, 长度限制在3-20个字符
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 团队描述, 长度限制在0-200个字符
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	// 团队logo, 长度限制在0-200个字符
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
	// 团队状态
	Status api.Status `protobuf:"varint,4,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
	// 负责人, 不传为自己
	LeaderId uint32 `protobuf:"varint,5,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	// 管理员
	AdminIds []uint32 `protobuf:"varint,6,rep,packed,name=admin_ids,json=adminIds,proto3" json:"admin_ids,omitempty"`
}

func (x *CreateTeamRequest) Reset() {
	*x = CreateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamRequest) ProtoMessage() {}

func (x *CreateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTeamRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTeamRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateTeamRequest) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *CreateTeamRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

func (x *CreateTeamRequest) GetLeaderId() uint32 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *CreateTeamRequest) GetAdminIds() []uint32 {
	if x != nil {
		return x.AdminIds
	}
	return nil
}

type CreateTeamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateTeamReply) Reset() {
	*x = CreateTeamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamReply) ProtoMessage() {}

func (x *CreateTeamReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamReply.ProtoReflect.Descriptor instead.
func (*CreateTeamReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{1}
}

// 只允许修改基础信息
type UpdateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 团队名称, 长度限制在3-20个字符
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 团队描述, 长度限制在0-200个字符
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	// 团队logo, 长度限制在0-200个字符
	Logo string `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
	// 团队状态
	Status api.Status `protobuf:"varint,5,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
}

func (x *UpdateTeamRequest) Reset() {
	*x = UpdateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamRequest) ProtoMessage() {}

func (x *UpdateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTeamRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTeamRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTeamRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateTeamRequest) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *UpdateTeamRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

type UpdateTeamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTeamReply) Reset() {
	*x = UpdateTeamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamReply) ProtoMessage() {}

func (x *UpdateTeamReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamReply.ProtoReflect.Descriptor instead.
func (*UpdateTeamReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{3}
}

type GetTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTeamRequest) Reset() {
	*x = GetTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamRequest) ProtoMessage() {}

func (x *GetTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamRequest.ProtoReflect.Descriptor instead.
func (*GetTeamRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{4}
}

func (x *GetTeamRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTeamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team *admin.Team `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
}

func (x *GetTeamReply) Reset() {
	*x = GetTeamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamReply) ProtoMessage() {}

func (x *GetTeamReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamReply.ProtoReflect.Descriptor instead.
func (*GetTeamReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{5}
}

func (x *GetTeamReply) GetTeam() *admin.Team {
	if x != nil {
		return x.Team
	}
	return nil
}

type ListTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword    string             `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Pagination *api.PaginationReq `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 状态
	Status api.Status `protobuf:"varint,3,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
	// 创建人
	CreatorId uint32 `protobuf:"varint,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	// 负责人
	LeaderId uint32 `protobuf:"varint,5,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
}

func (x *ListTeamRequest) Reset() {
	*x = ListTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamRequest) ProtoMessage() {}

func (x *ListTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamRequest.ProtoReflect.Descriptor instead.
func (*ListTeamRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{6}
}

func (x *ListTeamRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListTeamRequest) GetPagination() *api.PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListTeamRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

func (x *ListTeamRequest) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *ListTeamRequest) GetLeaderId() uint32 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

type ListTeamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *api.PaginationReply `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	List       []*admin.Team        `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListTeamReply) Reset() {
	*x = ListTeamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamReply) ProtoMessage() {}

func (x *ListTeamReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamReply.ProtoReflect.Descriptor instead.
func (*ListTeamReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{7}
}

func (x *ListTeamReply) GetPagination() *api.PaginationReply {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListTeamReply) GetList() []*admin.Team {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateTeamStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status api.Status `protobuf:"varint,2,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
}

func (x *UpdateTeamStatusRequest) Reset() {
	*x = UpdateTeamStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamStatusRequest) ProtoMessage() {}

func (x *UpdateTeamStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamStatusRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTeamStatusRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTeamStatusRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

type UpdateTeamStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTeamStatusReply) Reset() {
	*x = UpdateTeamStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamStatusReply) ProtoMessage() {}

func (x *UpdateTeamStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamStatusReply.ProtoReflect.Descriptor instead.
func (*UpdateTeamStatusReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{9}
}

type MyTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MyTeamRequest) Reset() {
	*x = MyTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyTeamRequest) ProtoMessage() {}

func (x *MyTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyTeamRequest.ProtoReflect.Descriptor instead.
func (*MyTeamRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{10}
}

type MyTeamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*admin.Team `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MyTeamReply) Reset() {
	*x = MyTeamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyTeamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyTeamReply) ProtoMessage() {}

func (x *MyTeamReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyTeamReply.ProtoReflect.Descriptor instead.
func (*MyTeamReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{11}
}

func (x *MyTeamReply) GetList() []*admin.Team {
	if x != nil {
		return x.List
	}
	return nil
}

type AddTeamMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32                             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Members []*AddTeamMemberRequest_MemberItem `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *AddTeamMemberRequest) Reset() {
	*x = AddTeamMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTeamMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTeamMemberRequest) ProtoMessage() {}

func (x *AddTeamMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTeamMemberRequest.ProtoReflect.Descriptor instead.
func (*AddTeamMemberRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{12}
}

func (x *AddTeamMemberRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddTeamMemberRequest) GetMembers() []*AddTeamMemberRequest_MemberItem {
	if x != nil {
		return x.Members
	}
	return nil
}

type AddTeamMemberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTeamMemberReply) Reset() {
	*x = AddTeamMemberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTeamMemberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTeamMemberReply) ProtoMessage() {}

func (x *AddTeamMemberReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTeamMemberReply.ProtoReflect.Descriptor instead.
func (*AddTeamMemberReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{13}
}

type RemoveTeamMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveTeamMemberRequest) Reset() {
	*x = RemoveTeamMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTeamMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTeamMemberRequest) ProtoMessage() {}

func (x *RemoveTeamMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTeamMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveTeamMemberRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveTeamMemberRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RemoveTeamMemberRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RemoveTeamMemberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveTeamMemberReply) Reset() {
	*x = RemoveTeamMemberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTeamMemberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTeamMemberReply) ProtoMessage() {}

func (x *RemoveTeamMemberReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTeamMemberReply.ProtoReflect.Descriptor instead.
func (*RemoveTeamMemberReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{15}
}

type SetTeamAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SetTeamAdminRequest) Reset() {
	*x = SetTeamAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTeamAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTeamAdminRequest) ProtoMessage() {}

func (x *SetTeamAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTeamAdminRequest.ProtoReflect.Descriptor instead.
func (*SetTeamAdminRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{16}
}

func (x *SetTeamAdminRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetTeamAdminRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SetTeamAdminReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTeamAdminReply) Reset() {
	*x = SetTeamAdminReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTeamAdminReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTeamAdminReply) ProtoMessage() {}

func (x *SetTeamAdminReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTeamAdminReply.ProtoReflect.Descriptor instead.
func (*SetTeamAdminReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{17}
}

type RemoveTeamAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveTeamAdminRequest) Reset() {
	*x = RemoveTeamAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTeamAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTeamAdminRequest) ProtoMessage() {}

func (x *RemoveTeamAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTeamAdminRequest.ProtoReflect.Descriptor instead.
func (*RemoveTeamAdminRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveTeamAdminRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RemoveTeamAdminRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RemoveTeamAdminReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveTeamAdminReply) Reset() {
	*x = RemoveTeamAdminReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTeamAdminReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTeamAdminReply) ProtoMessage() {}

func (x *RemoveTeamAdminReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTeamAdminReply.ProtoReflect.Descriptor instead.
func (*RemoveTeamAdminReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{19}
}

type SetMemberRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId uint32   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles  []uint32 `protobuf:"varint,3,rep,packed,name=roles,proto3" json:"roles,omitempty"`
}

func (x *SetMemberRoleRequest) Reset() {
	*x = SetMemberRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMemberRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMemberRoleRequest) ProtoMessage() {}

func (x *SetMemberRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMemberRoleRequest.ProtoReflect.Descriptor instead.
func (*SetMemberRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{20}
}

func (x *SetMemberRoleRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetMemberRoleRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetMemberRoleRequest) GetRoles() []uint32 {
	if x != nil {
		return x.Roles
	}
	return nil
}

type SetMemberRoleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMemberRoleReply) Reset() {
	*x = SetMemberRoleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMemberRoleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMemberRoleReply) ProtoMessage() {}

func (x *SetMemberRoleReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMemberRoleReply.ProtoReflect.Descriptor instead.
func (*SetMemberRoleReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{21}
}

type ListTeamMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Keyword    string             `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Pagination *api.PaginationReq `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Gender     api.Gender         `protobuf:"varint,4,opt,name=gender,proto3,enum=api.Gender" json:"gender,omitempty"`
	Status     api.Status         `protobuf:"varint,5,opt,name=status,proto3,enum=api.Status" json:"status,omitempty"`
	Role       api.Role           `protobuf:"varint,6,opt,name=role,proto3,enum=api.Role" json:"role,omitempty"`
}

func (x *ListTeamMemberRequest) Reset() {
	*x = ListTeamMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamMemberRequest) ProtoMessage() {}

func (x *ListTeamMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamMemberRequest.ProtoReflect.Descriptor instead.
func (*ListTeamMemberRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{22}
}

func (x *ListTeamMemberRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListTeamMemberRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListTeamMemberRequest) GetPagination() *api.PaginationReq {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListTeamMemberRequest) GetGender() api.Gender {
	if x != nil {
		return x.Gender
	}
	return api.Gender(0)
}

func (x *ListTeamMemberRequest) GetStatus() api.Status {
	if x != nil {
		return x.Status
	}
	return api.Status(0)
}

func (x *ListTeamMemberRequest) GetRole() api.Role {
	if x != nil {
		return x.Role
	}
	return api.Role(0)
}

type ListTeamMemberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *api.PaginationReply `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	List       []*admin.TeamMember  `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListTeamMemberReply) Reset() {
	*x = ListTeamMemberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamMemberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamMemberReply) ProtoMessage() {}

func (x *ListTeamMemberReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamMemberReply.ProtoReflect.Descriptor instead.
func (*ListTeamMemberReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{23}
}

func (x *ListTeamMemberReply) GetPagination() *api.PaginationReply {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListTeamMemberReply) GetList() []*admin.TeamMember {
	if x != nil {
		return x.List
	}
	return nil
}

type TransferTeamLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TransferTeamLeaderRequest) Reset() {
	*x = TransferTeamLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferTeamLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferTeamLeaderRequest) ProtoMessage() {}

func (x *TransferTeamLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferTeamLeaderRequest.ProtoReflect.Descriptor instead.
func (*TransferTeamLeaderRequest) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{24}
}

func (x *TransferTeamLeaderRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransferTeamLeaderRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type TransferTeamLeaderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransferTeamLeaderReply) Reset() {
	*x = TransferTeamLeaderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferTeamLeaderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferTeamLeaderReply) ProtoMessage() {}

func (x *TransferTeamLeaderReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferTeamLeaderReply.ProtoReflect.Descriptor instead.
func (*TransferTeamLeaderReply) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{25}
}

type AddTeamMemberRequest_MemberItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户ID
	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 是否设置为管理员
	Role api.Role `protobuf:"varint,2,opt,name=role,proto3,enum=api.Role" json:"role,omitempty"`
	// 绑定的角色列表
	Roles []uint32 `protobuf:"varint,3,rep,packed,name=roles,proto3" json:"roles,omitempty"`
}

func (x *AddTeamMemberRequest_MemberItem) Reset() {
	*x = AddTeamMemberRequest_MemberItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_team_team_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTeamMemberRequest_MemberItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTeamMemberRequest_MemberItem) ProtoMessage() {}

func (x *AddTeamMemberRequest_MemberItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_team_team_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTeamMemberRequest_MemberItem.ProtoReflect.Descriptor instead.
func (*AddTeamMemberRequest_MemberItem) Descriptor() ([]byte, []int) {
	return file_admin_team_team_proto_rawDescGZIP(), []int{12, 0}
}

func (x *AddTeamMemberRequest_MemberItem) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddTeamMemberRequest_MemberItem) GetRole() api.Role {
	if x != nil {
		return x.Role
	}
	return api.Role(0)
}

func (x *AddTeamMemberRequest_MemberItem) GetRoles() []uint32 {
	if x != nil {
		return x.Roles
	}
	return nil
}

var File_admin_team_team_proto protoreflect.FileDescriptor

var file_admin_team_team_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x74, 0x65, 0x61,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xfa, 0x03, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x71, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x5d, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0xba, 0x48, 0x54, 0xba, 0x01,
	0x51, 0x12, 0x28, 0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0xe9,
	0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x33, 0x2d, 0x32, 0x30, 0xe4, 0xb8, 0xaa, 0xe5,
	0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x1a, 0x25, 0x74, 0x68, 0x69,
	0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3e, 0x3d, 0x20, 0x33, 0x20, 0x26, 0x26,
	0x20, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20,
	0x32, 0x30, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5d, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x45, 0xba, 0x48, 0x42, 0xba, 0x01, 0x3f,
	0x12, 0x29, 0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0xe9, 0x95,
	0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x30, 0x2d, 0x31, 0x30, 0x30, 0xe4, 0xb8, 0xaa, 0xe5,
	0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x1a, 0x12, 0x74, 0x68, 0x69,
	0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x32, 0x30, 0x30, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0xab, 0x01, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x96, 0x01, 0xba, 0x48, 0x92, 0x01, 0xba, 0x01, 0x8e,
	0x01, 0x12, 0x41, 0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f, 0x6c, 0x6f, 0x67, 0x6f, 0xe9, 0x95, 0xbf,
	0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x30, 0x2d, 0x32, 0x30, 0x30, 0xe4, 0xb8, 0xaa, 0xe5, 0xad,
	0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb9, 0x8b, 0xe9, 0x97, 0xb4, 0x2c, 0x20, 0xe4, 0xb8, 0x94, 0xe5,
	0xbf, 0x85, 0xe9, 0xa1, 0xbb, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0x88, 0xe6, 0xb3, 0x95, 0xe7, 0x9a,
	0x84, 0x55, 0x52, 0x4c, 0x1a, 0x49, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28,
	0x29, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x20, 0x7c, 0x7c, 0x20, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73,
	0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x32, 0x30, 0x30, 0x20, 0x26, 0x26, 0x20,
	0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20,
	0x26, 0x26, 0x20, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x69, 0x73, 0x55, 0x72, 0x69, 0x28, 0x29, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x11, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0xd8, 0x03, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x71, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5d, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0xba, 0x48, 0x54, 0xba, 0x01, 0x51, 0x12, 0x28, 0xe5, 0x9b, 0xa2, 0xe9, 0x98,
	0x9f, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8,
	0x33, 0x2d, 0x32, 0x30, 0xe4, 0xb8, 0xaa, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb9, 0x8b,
	0xe9, 0x97, 0xb4, 0x1a, 0x25, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29,
	0x20, 0x3e, 0x3d, 0x20, 0x33, 0x20, 0x26, 0x26, 0x20, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69,
	0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x32, 0x30, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x5d, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x45, 0xba, 0x48, 0x42, 0xba, 0x01, 0x3f, 0x12, 0x29, 0xe5, 0x9b, 0xa2, 0xe9, 0x98, 0x9f,
	0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x30,
	0x2d, 0x31, 0x30, 0x30, 0xe4, 0xb8, 0xaa, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb9, 0x8b,
	0xe9, 0x97, 0xb4, 0x1a, 0x12, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29,
	0x20, 0x3c, 0x3d, 0x20, 0x32, 0x30, 0x30, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0xab, 0x01, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x96,
	0x01, 0xba, 0x48, 0x92, 0x01, 0xba, 0x01, 0x8e, 0x01, 0x12, 0x41, 0xe5, 0x9b, 0xa2, 0xe9, 0x98,
	0x9f, 0x6c, 0x6f, 0x67, 0x6f, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6, 0xe5, 0x9c, 0xa8, 0x30, 0x2d,
	0x32, 0x30, 0x30, 0xe4, 0xb8, 0xaa, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb9, 0x8b, 0xe9,
	0x97, 0xb4, 0x2c, 0x20, 0xe4, 0xb8, 0x94, 0xe5, 0xbf, 0x85, 0xe9, 0xa1, 0xbb, 0xe6, 0x98, 0xaf,
	0xe5, 0x90, 0x88, 0xe6, 0xb3, 0x95, 0xe7, 0x9a, 0x84, 0x55, 0x52, 0x4c, 0x1a, 0x49, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x20, 0x7c,
	0x7c, 0x20, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d,
	0x20, 0x32, 0x30, 0x30, 0x20, 0x26, 0x26, 0x20, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a,
	0x65, 0x28, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x26, 0x26, 0x20, 0x74, 0x68, 0x69, 0x73, 0x2e,
	0x69, 0x73, 0x55, 0x72, 0x69, 0x28, 0x29, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x2b, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x22, 0xc8, 0x01, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0f, 0x0a, 0x0d,
	0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a,
	0x0b, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xe5, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x51, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x62, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x52, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4e, 0x0a, 0x13,
	0x53, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x51, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x65, 0x0a, 0x14,
	0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xee, 0x01, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x76, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x54, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x65,
	0x61, 0x6d, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x32, 0xcd, 0x0c, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x65, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d,
	0x3a, 0x01, 0x2a, 0x12, 0x6a, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65,
	0x61, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x1a, 0x0d, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12,
	0x5e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f,
	0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x64, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x83, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x1a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x59, 0x0a, 0x06, 0x4d,
	0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x79, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x7e, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x65, 0x61, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f,
	0x61, 0x64, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x8a, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x87, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x29, 0x1a, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x8d, 0x01,
	0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65,
	0x61, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61,
	0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x89, 0x01,
	0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x1a, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x92,
	0x01, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x65, 0x61, 0x6d, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x74, 0x65, 0x61,
	0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x1a, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x3a, 0x01, 0x2a, 0x42, 0x43, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x64, 0x65, 0x2d, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x2f,
	0x6d, 0x6f, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x74,
	0x65, 0x61, 0x6d, 0x3b, 0x74, 0x65, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_team_team_proto_rawDescOnce sync.Once
	file_admin_team_team_proto_rawDescData = file_admin_team_team_proto_rawDesc
)

func file_admin_team_team_proto_rawDescGZIP() []byte {
	file_admin_team_team_proto_rawDescOnce.Do(func() {
		file_admin_team_team_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_team_team_proto_rawDescData)
	})
	return file_admin_team_team_proto_rawDescData
}

var file_admin_team_team_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_admin_team_team_proto_goTypes = []interface{}{
	(*CreateTeamRequest)(nil),               // 0: api.admin.team.CreateTeamRequest
	(*CreateTeamReply)(nil),                 // 1: api.admin.team.CreateTeamReply
	(*UpdateTeamRequest)(nil),               // 2: api.admin.team.UpdateTeamRequest
	(*UpdateTeamReply)(nil),                 // 3: api.admin.team.UpdateTeamReply
	(*GetTeamRequest)(nil),                  // 4: api.admin.team.GetTeamRequest
	(*GetTeamReply)(nil),                    // 5: api.admin.team.GetTeamReply
	(*ListTeamRequest)(nil),                 // 6: api.admin.team.ListTeamRequest
	(*ListTeamReply)(nil),                   // 7: api.admin.team.ListTeamReply
	(*UpdateTeamStatusRequest)(nil),         // 8: api.admin.team.UpdateTeamStatusRequest
	(*UpdateTeamStatusReply)(nil),           // 9: api.admin.team.UpdateTeamStatusReply
	(*MyTeamRequest)(nil),                   // 10: api.admin.team.MyTeamRequest
	(*MyTeamReply)(nil),                     // 11: api.admin.team.MyTeamReply
	(*AddTeamMemberRequest)(nil),            // 12: api.admin.team.AddTeamMemberRequest
	(*AddTeamMemberReply)(nil),              // 13: api.admin.team.AddTeamMemberReply
	(*RemoveTeamMemberRequest)(nil),         // 14: api.admin.team.RemoveTeamMemberRequest
	(*RemoveTeamMemberReply)(nil),           // 15: api.admin.team.RemoveTeamMemberReply
	(*SetTeamAdminRequest)(nil),             // 16: api.admin.team.SetTeamAdminRequest
	(*SetTeamAdminReply)(nil),               // 17: api.admin.team.SetTeamAdminReply
	(*RemoveTeamAdminRequest)(nil),          // 18: api.admin.team.RemoveTeamAdminRequest
	(*RemoveTeamAdminReply)(nil),            // 19: api.admin.team.RemoveTeamAdminReply
	(*SetMemberRoleRequest)(nil),            // 20: api.admin.team.SetMemberRoleRequest
	(*SetMemberRoleReply)(nil),              // 21: api.admin.team.SetMemberRoleReply
	(*ListTeamMemberRequest)(nil),           // 22: api.admin.team.ListTeamMemberRequest
	(*ListTeamMemberReply)(nil),             // 23: api.admin.team.ListTeamMemberReply
	(*TransferTeamLeaderRequest)(nil),       // 24: api.admin.team.TransferTeamLeaderRequest
	(*TransferTeamLeaderReply)(nil),         // 25: api.admin.team.TransferTeamLeaderReply
	(*AddTeamMemberRequest_MemberItem)(nil), // 26: api.admin.team.AddTeamMemberRequest.MemberItem
	(api.Status)(0),                         // 27: api.Status
	(*admin.Team)(nil),                      // 28: api.admin.Team
	(*api.PaginationReq)(nil),               // 29: api.PaginationReq
	(*api.PaginationReply)(nil),             // 30: api.PaginationReply
	(api.Gender)(0),                         // 31: api.Gender
	(api.Role)(0),                           // 32: api.Role
	(*admin.TeamMember)(nil),                // 33: api.admin.TeamMember
}
var file_admin_team_team_proto_depIdxs = []int32{
	27, // 0: api.admin.team.CreateTeamRequest.status:type_name -> api.Status
	27, // 1: api.admin.team.UpdateTeamRequest.status:type_name -> api.Status
	28, // 2: api.admin.team.GetTeamReply.team:type_name -> api.admin.Team
	29, // 3: api.admin.team.ListTeamRequest.pagination:type_name -> api.PaginationReq
	27, // 4: api.admin.team.ListTeamRequest.status:type_name -> api.Status
	30, // 5: api.admin.team.ListTeamReply.pagination:type_name -> api.PaginationReply
	28, // 6: api.admin.team.ListTeamReply.list:type_name -> api.admin.Team
	27, // 7: api.admin.team.UpdateTeamStatusRequest.status:type_name -> api.Status
	28, // 8: api.admin.team.MyTeamReply.list:type_name -> api.admin.Team
	26, // 9: api.admin.team.AddTeamMemberRequest.members:type_name -> api.admin.team.AddTeamMemberRequest.MemberItem
	29, // 10: api.admin.team.ListTeamMemberRequest.pagination:type_name -> api.PaginationReq
	31, // 11: api.admin.team.ListTeamMemberRequest.gender:type_name -> api.Gender
	27, // 12: api.admin.team.ListTeamMemberRequest.status:type_name -> api.Status
	32, // 13: api.admin.team.ListTeamMemberRequest.role:type_name -> api.Role
	30, // 14: api.admin.team.ListTeamMemberReply.pagination:type_name -> api.PaginationReply
	33, // 15: api.admin.team.ListTeamMemberReply.list:type_name -> api.admin.TeamMember
	32, // 16: api.admin.team.AddTeamMemberRequest.MemberItem.role:type_name -> api.Role
	0,  // 17: api.admin.team.Team.CreateTeam:input_type -> api.admin.team.CreateTeamRequest
	2,  // 18: api.admin.team.Team.UpdateTeam:input_type -> api.admin.team.UpdateTeamRequest
	4,  // 19: api.admin.team.Team.GetTeam:input_type -> api.admin.team.GetTeamRequest
	6,  // 20: api.admin.team.Team.ListTeam:input_type -> api.admin.team.ListTeamRequest
	8,  // 21: api.admin.team.Team.UpdateTeamStatus:input_type -> api.admin.team.UpdateTeamStatusRequest
	10, // 22: api.admin.team.Team.MyTeam:input_type -> api.admin.team.MyTeamRequest
	12, // 23: api.admin.team.Team.AddTeamMember:input_type -> api.admin.team.AddTeamMemberRequest
	14, // 24: api.admin.team.Team.RemoveTeamMember:input_type -> api.admin.team.RemoveTeamMemberRequest
	16, // 25: api.admin.team.Team.SetTeamAdmin:input_type -> api.admin.team.SetTeamAdminRequest
	18, // 26: api.admin.team.Team.RemoveTeamAdmin:input_type -> api.admin.team.RemoveTeamAdminRequest
	20, // 27: api.admin.team.Team.SetMemberRole:input_type -> api.admin.team.SetMemberRoleRequest
	22, // 28: api.admin.team.Team.ListTeamMember:input_type -> api.admin.team.ListTeamMemberRequest
	24, // 29: api.admin.team.Team.TransferTeamLeader:input_type -> api.admin.team.TransferTeamLeaderRequest
	1,  // 30: api.admin.team.Team.CreateTeam:output_type -> api.admin.team.CreateTeamReply
	3,  // 31: api.admin.team.Team.UpdateTeam:output_type -> api.admin.team.UpdateTeamReply
	5,  // 32: api.admin.team.Team.GetTeam:output_type -> api.admin.team.GetTeamReply
	7,  // 33: api.admin.team.Team.ListTeam:output_type -> api.admin.team.ListTeamReply
	9,  // 34: api.admin.team.Team.UpdateTeamStatus:output_type -> api.admin.team.UpdateTeamStatusReply
	11, // 35: api.admin.team.Team.MyTeam:output_type -> api.admin.team.MyTeamReply
	13, // 36: api.admin.team.Team.AddTeamMember:output_type -> api.admin.team.AddTeamMemberReply
	15, // 37: api.admin.team.Team.RemoveTeamMember:output_type -> api.admin.team.RemoveTeamMemberReply
	17, // 38: api.admin.team.Team.SetTeamAdmin:output_type -> api.admin.team.SetTeamAdminReply
	19, // 39: api.admin.team.Team.RemoveTeamAdmin:output_type -> api.admin.team.RemoveTeamAdminReply
	21, // 40: api.admin.team.Team.SetMemberRole:output_type -> api.admin.team.SetMemberRoleReply
	23, // 41: api.admin.team.Team.ListTeamMember:output_type -> api.admin.team.ListTeamMemberReply
	25, // 42: api.admin.team.Team.TransferTeamLeader:output_type -> api.admin.team.TransferTeamLeaderReply
	30, // [30:43] is the sub-list for method output_type
	17, // [17:30] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_admin_team_team_proto_init() }
func file_admin_team_team_proto_init() {
	if File_admin_team_team_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_team_team_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyTeamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTeamMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTeamMemberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTeamMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTeamMemberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTeamAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTeamAdminReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTeamAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTeamAdminReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMemberRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMemberRoleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamMemberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferTeamLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferTeamLeaderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_team_team_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTeamMemberRequest_MemberItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_team_team_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_team_team_proto_goTypes,
		DependencyIndexes: file_admin_team_team_proto_depIdxs,
		MessageInfos:      file_admin_team_team_proto_msgTypes,
	}.Build()
	File_admin_team_team_proto = out.File
	file_admin_team_team_proto_rawDesc = nil
	file_admin_team_team_proto_goTypes = nil
	file_admin_team_team_proto_depIdxs = nil
}
