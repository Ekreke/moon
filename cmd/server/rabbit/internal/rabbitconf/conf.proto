syntax = "proto3";

package moon.cmd.server.demo.internal.rabbitconf;

import "google/protobuf/duration.proto";
import "global.proto";

option go_package = "github.com/aide-family/moon/cmd/server/rabbit/internal/rabbitconf;rabbitconf";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  string env = 3;
  // 根据路由匹配具体的发送对象
  map<string, api.Receiver> receivers = 4;
  map<string, string> templates = 5;
  // 全局邮件配置
  api.EmailConfig global_email_config = 6;
  // 服务发现配置， 如果配置了服务发现，endpoint则会被当作服务发现地址, 没有配置直接当作服务地址
  api.Discovery discovery = 7;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }

  HTTP http = 1;
  GRPC grpc = 2;
  string name = 3;
  map<string, string> metadata = 4;
}

message Data {
  message Cache {
    message Redis {
      string network = 1;
      string addr = 2;
      google.protobuf.Duration read_timeout = 3;
      google.protobuf.Duration write_timeout = 4;
      string password = 5;
      uint32 db = 6;
      google.protobuf.Duration dial_timeout = 7;
    }
    message NutsDB {
      string path = 1;
      string bucket = 2;
    }
    message Free {
      uint32 size = 1;
    }
    Redis redis = 1;
    NutsDB nutsDB = 2;
    Free free = 3;
  }
  // 缓存，支持多缓存方式
  Cache cache = 3;
}

