// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"context"
	"encoding/json"

	"github.com/aide-cloud/moon/pkg/types"
	"github.com/aide-cloud/moon/pkg/vobj"
	"gorm.io/gen"
	"gorm.io/gorm"
)

const TableNameSysTeam = "sys_teams"

// SysTeam mapped from table <sys_teams>
type SysTeam struct {
	ID        uint32      `gorm:"column:id;type:int unsigned;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt *types.Time `gorm:"column:created_at;type:datetime;not null;default:CURRENT_TIMESTAMP;comment:创建时间" json:"created_at"` // 创建时间
	UpdatedAt *types.Time `gorm:"column:updated_at;type:datetime;not null;default:CURRENT_TIMESTAMP;comment:更新时间" json:"updated_at"` // 更新时间
	DeletedAt int64       `gorm:"column:deleted_at;type:bigint;not null" json:"deleted_at"`
	Name      string      `gorm:"column:name;type:varchar(64);not null;uniqueIndex:idx__name,priority:1;comment:团队空间名" json:"name"`             // 团队空间名
	Status    vobj.Status `gorm:"column:status;type:tinyint(1);not null;default:1;comment:状态" json:"status"`                                    // 状态
	Remark    string      `gorm:"column:remark;type:varchar(255);not null;comment:备注" json:"remark"`                                            // 备注
	Avatar    string      `gorm:"column:avatar;type:varchar(255);not null;comment:头像" json:"avatar"`                                            // 头像
	OwnerID   uint32      `gorm:"column:owner_id;type:int unsigned;not null;index:sys_teams__sys_users,priority:1;comment:负责人" json:"owner_id"` // 负责人
	CreatorID uint32      `gorm:"column:creator_id;type:int unsigned;not null;comment:创建者" json:"creator_id"`                                   // 创建者
}

// String json string
func (c *SysTeam) String() string {
	bs, _ := json.Marshal(c)
	return string(bs)
}

func (c *SysTeam) UnmarshalBinary(data []byte) error {
	return json.Unmarshal(data, c)
}

func (c *SysTeam) MarshalBinary() (data []byte, err error) {
	return json.Marshal(c)
}

// Create func
func (c *SysTeam) Create(ctx context.Context, tx *gorm.DB) error {
	return tx.WithContext(ctx).Create(c).Error
}

// Update func
func (c *SysTeam) Update(ctx context.Context, tx *gorm.DB, conds []gen.Condition) error {
	return tx.WithContext(ctx).Model(c).Where(conds).Updates(c).Error
}

// UpdateByID update func
func (c *SysTeam) UpdateByID(ctx context.Context, tx *gorm.DB) error {
	return tx.WithContext(ctx).Model(c).Where("id = ?", c.ID).Updates(c).Error
}

// Delete func
func (c *SysTeam) Delete(ctx context.Context, tx *gorm.DB, conds []gen.Condition) error {
	return tx.WithContext(ctx).Where(conds).Delete(c).Error
}

// DeleteByID delete func
func (c *SysTeam) DeleteByID(ctx context.Context, tx *gorm.DB) error {
	return tx.WithContext(ctx).Delete(c, c.ID).Error
}

// TableName SysTeam's table name
func (*SysTeam) TableName() string {
	return TableNameSysTeam
}
