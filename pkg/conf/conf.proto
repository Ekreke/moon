syntax = "proto3";

package pkg.conf;

import "google/protobuf/duration.proto";

option go_package = "github.com/aide-family/moon/pkg/conf;conf";

// 服务配置
message Server {
  // 服务名称
  string name = 1;
  // 服务元数据
  map<string, string> metadata = 2;
}

// http服务配置
message HTTPServer {
  // 网络类型
  string network = 1;
  // 服务地址
  string addr = 2;
  // 读写超时时间
  google.protobuf.Duration timeout = 3;
}

// grpc服务配置
message GRPCServer {
  // 网络类型
  string network = 1;
  // 服务地址
  string addr = 2;
  // 读写超时时间
  google.protobuf.Duration timeout = 3;
}

// jwt配置
message JWT {
  // 签名密钥
  string sign_key = 1;
  // 签发者
  string issuer = 2;
  // 有效期
  google.protobuf.Duration expire = 4;
}

// api限流配置
message APILimit {
  // 被允许的请求
  repeated string allow_list = 1;
  // 被拒绝的请求
  repeated string deny_list = 2;
  // 信任的请求（不需要rbac）
  repeated string trusted_list = 3;
}

// 数据库配置
message Database {
  // 驱动， 支持gorm即可
  string driver = 1;
  // 数据库连接串
  string dsn = 2;
  // 是否开启调试
  bool debug = 3;
}

// redis配置
message Redis {
  // 网络类型
  string network = 1;
  // 地址
  string addr = 2;
  // 读写超时
  google.protobuf.Duration read_timeout = 3;
  google.protobuf.Duration write_timeout = 4;
  // 密码
  string password = 5;
  // 数据库
  uint32 db = 6;
  // 连接超时
  google.protobuf.Duration dial_timeout = 7;
}

// nuts db配置
message NutsDB {
  // 数据库路径
  string path = 1;
  // 缓存桶
  string bucket = 2;
}

// 内存缓存配置
message Free {
  // 内存缓存大小
  uint32 size = 1;
}

// 缓存配置
message Cache {
  //redis nuts-db  free
  string driver = 1;
  // redis配置
  Redis redis = 2;
  // nuts db配置
  NutsDB nutsDB = 3;
  // 内存缓存配置
  Free free = 4;
}

// 微服务配置
message MicroServer {
  // 服务地址
  string endpoint = 1;
  // 密钥
  optional string secret = 2;
  // 超时时间
  optional google.protobuf.Duration timeout = 3;
  // 网络类型， http, https, grpc
  string network = 4;
  // node版本
  string node_version = 5;
}

// jaeger配置
message Jaeger {
  // 端点
  string endpoint = 1;
}

// 链路追踪配置
message Tracer {
  // 驱动， 支持jaeger
  string driver = 1;
  // jaeger配置
  Jaeger jaeger = 2;
}

// ETCD数据源配置
message ETCD {
  // 端点
  repeated string endpoints = 1;
  // 连接超时
  optional google.protobuf.Duration timeout = 2;
  // 用户名
  optional string username = 3;
  // 密码
  optional string password = 4;
}

// 服务注册发现配置
message Discovery {
  // 类型， 名称和数据源保持一致，例如etcd
  string driver = 1;
  // 数据源
  ETCD etcd = 2;
}

// 邮件发送配置
message EmailConfig {
  // 用户
  string user = 1;
  // 发送的邮箱密码
  string pass = 2;
  // 发送的邮箱服务器
  string host = 3;
  // 发送的邮箱端口
  uint32 port = 4;
}

// 钉钉
message ReceiverHookDingTalk {
  // hook地址
  string webhook = 1;
  // 钉钉加签秘钥
  string secret = 2;
  // 钉钉消息json内容，支持模板， 优先级高于模板
  string content = 3;
  // 模板
  string template = 4;
}

// 飞书
message ReceiverHookFeiShu {
  // hook地址
  string webhook = 1;
  // 钉钉加签秘钥
  string secret = 2;
  // 钉钉消息json内容，支持模板， 优先级高于模板
  string content = 3;
  // 模板
  string template = 4;
}

// 企业微信
message ReceiverHookWechatWork {
  // hook地址
  string webhook = 1;
  // 钉钉消息json内容，支持模板， 优先级高于模板
  string content = 2;
  // 模板
  string template = 3;
}

// 其他
message ReceiverHookOther {
  // hook地址
  string webhook = 1;
  // 钉钉消息json内容，支持模板， 优先级高于模板
  string content = 2;
  // 模板
  string template = 3;
}

// 邮件目标
message ReceiverEmail {
  // 发送给谁
  string to = 1;
  // 发送的主题
  string subject = 2;
  // 发送的内容， 优先级高于模板
  string content = 3;
  // 发送的模板，内容字段为空时， 以数据填充模板后发送
  string template = 4;
  // 抄送对象
  repeated string cc = 5;
  // 附件URL，一般为oss地址
  repeated string attachUrl = 6;
  // 发送的内容类型
  string contentType = 7;
}

// 电话目标
message ReceiverPhone {
  // 拨打电话
  message Call {}
  // 短信
  message Sms {}
}

// hook目标
message ReceiverHook {
  // 钉钉
  ReceiverHookDingTalk dingTalk = 1;
  // 飞书
  ReceiverHookFeiShu feiShu = 2;
  // 企业微信
  ReceiverHookWechatWork wechatWork = 3;
  // 其他
  ReceiverHookOther other = 4;
}

message Receiver {
  repeated ReceiverHook hooks = 1;

  repeated ReceiverPhone phones = 2;

  repeated ReceiverEmail emails = 3;

  EmailConfig emailConfig = 4;
}
